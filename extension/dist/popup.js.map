{"version":3,"file":"popup.js","mappings":"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","sources":["webpack://nammasuraksha-extension/./popup.js"],"sourcesContent":["// DOM Elements\r\nlet currentTab = null;\r\nlet analysisInProgress = false;\r\nlet port = null;\r\n\r\n// Establish connection with background script\r\nfunction connectToBackground() {\r\n    port = chrome.runtime.connect({ name: 'popup' });\r\n    port.onMessage.addListener(handleMessage);\r\n    port.onDisconnect.addListener(() => {\r\n        port = null;\r\n        setTimeout(connectToBackground, 1000); // Reconnect after 1 second\r\n    });\r\n}\r\n\r\n// Handle messages from background script\r\nfunction handleMessage(message) {\r\n    if (message.type === 'ANALYSIS_STATUS') {\r\n        updateThreatStatus(message.data);\r\n        updateGuaranteeStatus(message.data);\r\n    } else if (message.type === 'ANALYSIS_COMPLETE') {\r\n        updateThreatStatus(message.data);\r\n        updateGuaranteeStatus(message.data);\r\n        updateAnalysisDetails(message.data);\r\n        updateStats(message.data);\r\n        \r\n        // Show notification popup\r\n        showNotificationPopup(message.data);\r\n        \r\n        // Enable refresh button\r\n        const refreshButton = document.getElementById('refreshAnalysis');\r\n        refreshButton.disabled = false;\r\n        refreshButton.textContent = 'Refresh Analysis';\r\n        analysisInProgress = false;\r\n    } else if (message.type === 'ANALYSIS_STARTED') {\r\n        updateLoadingState(true, message.data?.message || 'Analyzing...');\r\n        const refreshButton = document.getElementById('refreshAnalysis');\r\n        refreshButton.disabled = true;\r\n    } else if (message.type === 'ANALYSIS_ERROR') {\r\n        showError(message.error || 'An error occurred during analysis');\r\n        const refreshButton = document.getElementById('refreshAnalysis');\r\n        refreshButton.disabled = false;\r\n    } else if (message.type === 'FEATURE_STATUS') {\r\n        updateFeatureStatus(message.featureId, message.isActive);\r\n    }\r\n}\r\n\r\n// Helper function to update threat status display\r\nfunction updateThreatStatus(analysis) {\r\n    const threatLevel = analysis.threatLevel || 'unknown';\r\n    const message = analysis.message || 'Unknown status';\r\n    \r\n    const threatLevelElement = document.getElementById('threatLevel');\r\n    const statusMessageElement = document.getElementById('statusMessage');\r\n    const threatStatusCard = document.getElementById('threatStatus');\r\n    \r\n    // Update status card appearance\r\n    threatStatusCard.className = `status-card ${threatLevel}`;\r\n    threatLevelElement.textContent = analysis.type === 'EMAIL_ANALYSIS' ? \r\n        'Email Analysis' : 'Website Security';\r\n    statusMessageElement.textContent = message;\r\n\r\n    // Show appropriate icon based on threat level\r\n    const statusIcon = threatStatusCard.querySelector('.status-icon');\r\n    statusIcon.className = `status-icon ${threatLevel}`;\r\n\r\n    // Show analyzing state if needed\r\n    if (threatLevel === 'analyzing') {\r\n        statusIcon.classList.add('analyzing');\r\n    }\r\n}\r\n\r\n// Helper function to update the analysis details\r\nfunction updateAnalysisDetails(analysis) {\r\n    const detailsSection = document.getElementById('analysisDetails');\r\n    const threatsList = document.getElementById('threatsList');\r\n    const patternsList = document.getElementById('patternsList');\r\n    const recommendationsList = document.getElementById('recommendationsList');\r\n\r\n    // Clear existing content\r\n    threatsList.innerHTML = '';\r\n    patternsList.innerHTML = '';\r\n    recommendationsList.innerHTML = '';\r\n\r\n    if (analysis.details) {\r\n        // Update domain info for website analysis\r\n        if (analysis.type === 'DOMAIN_ANALYSIS' && analysis.details.domain) {\r\n            const domainInfo = document.createElement('div');\r\n            domainInfo.className = 'domain-info';\r\n            domainInfo.innerHTML = `<strong>Domain:</strong> ${analysis.details.domain}`;\r\n            threatsList.appendChild(domainInfo);\r\n\r\n            // Display security checks\r\n            if (analysis.details.checks) {\r\n                analysis.details.checks.forEach(check => {\r\n                    const checkItem = document.createElement('div');\r\n                    checkItem.className = `check-item ${check.status}`;\r\n                    checkItem.innerHTML = `\r\n                        <span class=\"check-type\">${check.type}</span>\r\n                        <span class=\"check-message\">${check.message}</span>\r\n                    `;\r\n                    threatsList.appendChild(checkItem);\r\n                });\r\n            }\r\n        } else if (analysis.type === 'ERROR') {\r\n            const errorItem = document.createElement('div');\r\n            errorItem.className = 'check-item error';\r\n            errorItem.innerHTML = `\r\n                <span class=\"check-type\">Error</span>\r\n                <span class=\"check-message\">${analysis.details.error || 'Unknown error occurred'}</span>\r\n            `;\r\n            threatsList.appendChild(errorItem);\r\n        }\r\n\r\n        // Update recommendations\r\n        if (analysis.details.recommendations && analysis.details.recommendations.length > 0) {\r\n            analysis.details.recommendations.forEach(rec => {\r\n                const recItem = document.createElement('div');\r\n                recItem.className = `recommendation-item ${rec.severity}`;\r\n                recItem.textContent = rec.message;\r\n                recommendationsList.appendChild(recItem);\r\n            });\r\n        } else {\r\n            recommendationsList.innerHTML = '<p class=\"empty-state\">No recommendations needed</p>';\r\n        }\r\n\r\n        // Update suspicious patterns\r\n        if (analysis.details.suspiciousLinks && analysis.details.suspiciousLinks.length > 0) {\r\n            analysis.details.suspiciousLinks.forEach(pattern => {\r\n                const patternItem = document.createElement('div');\r\n                patternItem.className = 'pattern-item';\r\n                patternItem.textContent = pattern;\r\n                patternsList.appendChild(patternItem);\r\n            });\r\n        } else {\r\n            patternsList.innerHTML = '<p class=\"empty-state\">No suspicious patterns detected</p>';\r\n        }\r\n    }\r\n\r\n    // Update timestamp\r\n    const timestamp = document.getElementById('lastUpdated');\r\n    timestamp.textContent = new Date().toLocaleTimeString();\r\n}\r\n\r\n// Helper function to update feature status\r\nfunction updateFeatureStatus(feature, isActive) {\r\n    const featureCard = document.querySelector(`[data-feature=\"${feature}\"]`);\r\n    if (featureCard) {\r\n        const statusElement = featureCard.querySelector('.feature-status');\r\n        statusElement.className = `feature-status ${isActive ? 'active' : 'inactive'}`;\r\n        statusElement.textContent = isActive ? 'Active' : 'Inactive';\r\n    }\r\n}\r\n\r\n// Helper function to update stats\r\nfunction updateStats(analysis) {\r\n    if (analysis.details) {\r\n        const threatsBlocked = document.getElementById('threats-blocked');\r\n        const linksScanned = document.getElementById('links-scanned');\r\n        \r\n        chrome.storage.local.get(['threatsBlocked', 'linksScanned'], (result) => {\r\n            threatsBlocked.textContent = result.threatsBlocked || 0;\r\n            linksScanned.textContent = result.linksScanned || 0;\r\n        });\r\n    }\r\n}\r\n\r\n// Function to refresh analysis\r\nasync function refreshAnalysis() {\r\n    if (analysisInProgress || !currentTab) return;\r\n    \r\n    analysisInProgress = true;\r\n    const refreshButton = document.getElementById('refreshAnalysis');\r\n    refreshButton.disabled = true;\r\n    refreshButton.textContent = 'Analyzing...';\r\n\r\n    try {\r\n        // Show analyzing state\r\n        updateThreatStatus({\r\n            type: 'ANALYZING',\r\n            threatLevel: 'analyzing',\r\n            message: 'Refreshing analysis...'\r\n        });\r\n\r\n        // Request new analysis\r\n        chrome.runtime.sendMessage({ \r\n            type: 'REFRESH_ANALYSIS',\r\n            tabId: currentTab.id \r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Error refreshing analysis:', error);\r\n        updateThreatStatus({\r\n            type: 'ERROR',\r\n            threatLevel: 'error',\r\n            message: 'Failed to refresh analysis'\r\n        });\r\n        \r\n        // Reset button state\r\n        refreshButton.disabled = false;\r\n        refreshButton.textContent = 'Refresh Analysis';\r\n        analysisInProgress = false;\r\n    }\r\n}\r\n\r\nfunction updateLoadingState(isLoading, message = 'Analyzing...') {\r\n    const statusCard = document.querySelector('.status-card');\r\n    const statusIcon = document.querySelector('.status-icon');\r\n    \r\n    if (isLoading) {\r\n        statusCard.classList.add('analyzing');\r\n        statusIcon.classList.add('analyzing');\r\n        statusCard.querySelector('.status-message').textContent = message;\r\n    } else {\r\n        statusCard.classList.remove('analyzing');\r\n        statusIcon.classList.remove('analyzing');\r\n    }\r\n}\r\n\r\nfunction showError(message) {\r\n    const statusCard = document.querySelector('.status-card');\r\n    statusCard.classList.remove('analyzing');\r\n    statusCard.classList.add('error');\r\n    statusCard.querySelector('.status-message').textContent = message;\r\n}\r\n\r\nfunction updateAnalysisResults(results) {\r\n    const analysisSection = document.querySelector('.analysis-section');\r\n    \r\n    if (!results || Object.keys(results).length === 0) {\r\n        analysisSection.innerHTML = `\r\n            <div class=\"empty-state\">\r\n                No analysis results available yet.\r\n                Click refresh to analyze again.\r\n            </div>\r\n        `;\r\n        return;\r\n    }\r\n\r\n    // Update security checks\r\n    if (results.securityChecks) {\r\n        const securityList = document.querySelector('.security-checks');\r\n        securityList.innerHTML = results.securityChecks.map(check => `\r\n            <div class=\"check-item ${check.status === 'error' ? 'error' : ''}\">\r\n                <div class=\"check-type\">${check.type}</div>\r\n                <div class=\"check-message\">${check.message}</div>\r\n            </div>\r\n        `).join('');\r\n    }\r\n\r\n    // Update stats if available\r\n    if (results.stats) {\r\n        Object.entries(results.stats).forEach(([key, value]) => {\r\n            const statElement = document.querySelector(`#${key}Stat`);\r\n            if (statElement) {\r\n                const valueElement = statElement.querySelector('.stat-value');\r\n                if (valueElement) {\r\n                    valueElement.textContent = value;\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction updateGuaranteeStatus(analysis) {\r\n    const guaranteeStatus = document.querySelector('.guarantee-status');\r\n    const guaranteeMessage = guaranteeStatus.querySelector('.guarantee-message');\r\n    const verifyItems = guaranteeStatus.querySelectorAll('.verify-item');\r\n    \r\n    // Remove all states first\r\n    guaranteeStatus.classList.remove('analyzing', 'not-genuine');\r\n    \r\n    if (analysis.type === 'ANALYZING') {\r\n        guaranteeStatus.classList.add('analyzing');\r\n        guaranteeMessage.textContent = 'Analyzing Website...';\r\n        verifyItems.forEach(item => {\r\n            const icon = item.querySelector('.verify-icon');\r\n            icon.textContent = '↻';\r\n        });\r\n        return;\r\n    }\r\n    \r\n    const isGenuine = analysis.threatLevel === 'low' && \r\n                      analysis.details?.checks?.every(check => check.status !== 'danger');\r\n    \r\n    if (isGenuine) {\r\n        guaranteeMessage.textContent = 'Guaranteed Genuine';\r\n        verifyItems.forEach(item => {\r\n            const icon = item.querySelector('.verify-icon');\r\n            icon.textContent = '✓';\r\n        });\r\n    } else {\r\n        guaranteeStatus.classList.add('not-genuine');\r\n        guaranteeMessage.textContent = 'Not Verified';\r\n        verifyItems.forEach(item => {\r\n            const icon = item.querySelector('.verify-icon');\r\n            icon.textContent = '×';\r\n        });\r\n    }\r\n    \r\n    // Update verification details\r\n    const [domainVerify, sslVerify, threatVerify] = verifyItems;\r\n    \r\n    if (analysis.details?.checks) {\r\n        const domainCheck = analysis.details.checks.find(c => c.type.includes('domain'));\r\n        const sslCheck = analysis.details.checks.find(c => c.type.includes('ssl'));\r\n        \r\n        domainVerify.querySelector('.verify-text').textContent = \r\n            domainCheck?.status === 'safe' ? 'Domain Verified' : 'Domain Not Verified';\r\n        \r\n        sslVerify.querySelector('.verify-text').textContent = \r\n            sslCheck?.status === 'safe' ? 'SSL Secure' : 'SSL Not Secure';\r\n        \r\n        threatVerify.querySelector('.verify-text').textContent = \r\n            isGenuine ? 'No Threats Detected' : 'Threats Detected';\r\n    }\r\n}\r\n\r\nfunction showNotificationPopup(analysis) {\r\n    const isGenuine = analysis.threatLevel === 'low' && \r\n                     analysis.details?.checks?.every(check => check.status !== 'danger');\r\n    \r\n    const popupUrl = isGenuine ? 'safe.html' : 'warning.html';\r\n    \r\n    // Store the analysis details for the popup\r\n    chrome.storage.local.set({\r\n        'lastAnalysis': {\r\n            url: currentTab.url,\r\n            result: analysis,\r\n            timestamp: Date.now()\r\n        }\r\n    }, () => {\r\n        // Create the popup window\r\n        chrome.windows.create({\r\n            url: chrome.runtime.getURL(popupUrl),\r\n            type: 'popup',\r\n            width: 400,\r\n            height: 300,\r\n            focused: true\r\n        }).catch(error => {\r\n            console.error('Error showing notification popup:', error);\r\n        });\r\n    });\r\n}\r\n\r\n// Initialize popup\r\ndocument.addEventListener('DOMContentLoaded', async () => {\r\n    try {\r\n        // Connect to background script\r\n        connectToBackground();\r\n\r\n        // Get current tab\r\n        const [tab] = await chrome.tabs.query({ active: true, currentWindow: true });\r\n        currentTab = tab;\r\n\r\n        if (!tab.url || tab.url.startsWith('chrome://')) {\r\n            updateThreatStatus({\r\n                type: 'ERROR',\r\n                threatLevel: 'error',\r\n                message: 'Cannot analyze this page'\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Show initial analyzing state\r\n        updateThreatStatus({\r\n            type: 'ANALYZING',\r\n            threatLevel: 'analyzing',\r\n            message: 'Fetching analysis...'\r\n        });\r\n\r\n        // Request current analysis\r\n        chrome.runtime.sendMessage({ \r\n            type: 'GET_ANALYSIS',\r\n            tabId: tab.id \r\n        });\r\n\r\n        // Setup refresh button\r\n        const refreshButton = document.getElementById('refreshAnalysis');\r\n        refreshButton.addEventListener('click', refreshAnalysis);\r\n\r\n        // Setup settings button\r\n        const settingsButton = document.getElementById('settings-btn');\r\n        settingsButton.addEventListener('click', () => {\r\n            chrome.runtime.openOptionsPage();\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Error initializing popup:', error);\r\n        updateThreatStatus({\r\n            type: 'ERROR',\r\n            threatLevel: 'error',\r\n            message: 'Failed to initialize'\r\n        });\r\n    }\r\n});"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_slicedToArray","Array","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","from","test","_unsupportedIterableToArray","_nonIterableRest","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","currentTab","analysisInProgress","port","connectToBackground","chrome","runtime","connect","onMessage","addListener","handleMessage","onDisconnect","setTimeout","message","updateThreatStatus","data","updateGuaranteeStatus","analysis","document","getElementById","threatsList","patternsList","recommendationsList","innerHTML","details","domain","domainInfo","createElement","className","concat","appendChild","checks","check","checkItem","status","errorItem","error","recommendations","rec","recItem","severity","textContent","suspiciousLinks","pattern","patternItem","Date","toLocaleTimeString","updateAnalysisDetails","threatsBlocked","linksScanned","storage","local","get","result","updateStats","popupUrl","threatLevel","_analysis$details3","every","set","url","timestamp","now","windows","getURL","width","height","focused","console","refreshButton","disabled","_message$data","isLoading","undefined","statusCard","querySelector","statusIcon","classList","add","remove","updateLoadingState","showError","feature","isActive","featureCard","statusElement","updateFeatureStatus","featureId","threatLevelElement","statusMessageElement","threatStatusCard","refreshAnalysis","_refreshAnalysis","_callee2","_context2","sendMessage","tabId","id","_analysis$details","_analysis$details2","guaranteeStatus","guaranteeMessage","verifyItems","querySelectorAll","item","isGenuine","_verifyItems","domainVerify","sslVerify","threatVerify","domainCheck","find","includes","sslCheck","addEventListener","_callee","_yield$chrome$tabs$qu","_yield$chrome$tabs$qu2","tab","_context","tabs","query","active","currentWindow","startsWith","openOptionsPage","t0"],"sourceRoot":""}