{"version":3,"file":"emailScanner.js","mappings":";u+BACAA,EAAA,kBAAAC,CAAA,MAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAApB,EAAAD,EAAA,KAAAkB,EAAA,aAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,WAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAK,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,WAAAU,EAAA,IAAAW,EAAApB,GAAA,WAAAE,EAAAK,EAAA,WAAAH,MAAAiB,EAAAzB,EAAAC,EAAAY,KAAAF,CAAA,UAAAe,EAAA1B,EAAAD,EAAAE,GAAA,WAAA0B,KAAA,SAAAC,IAAA5B,EAAA6B,KAAA9B,EAAAE,GAAA,OAAAD,GAAA,OAAA2B,KAAA,QAAAC,IAAA5B,EAAA,EAAAD,EAAAsB,KAAAA,EAAA,IAAAS,EAAA,iBAAAC,EAAA,iBAAAC,EAAA,YAAAC,EAAA,YAAAC,EAAA,YAAAZ,IAAA,UAAAa,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAApB,EAAAoB,EAAA1B,GAAA,8BAAA2B,EAAApC,OAAAqC,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAAvC,GAAAG,EAAAyB,KAAAW,EAAA7B,KAAA0B,EAAAG,GAAA,IAAAE,EAAAN,EAAAjC,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAc,GAAA,SAAAM,EAAA3C,GAAA,0BAAA4C,SAAA,SAAA7C,GAAAkB,EAAAjB,EAAAD,GAAA,SAAAC,GAAA,YAAA6C,QAAA9C,EAAAC,EAAA,gBAAA8C,EAAA9C,EAAAD,GAAA,SAAAgD,EAAA9C,EAAAK,EAAAG,EAAAE,GAAA,IAAAE,EAAAa,EAAA1B,EAAAC,GAAAD,EAAAM,GAAA,aAAAO,EAAAc,KAAA,KAAAZ,EAAAF,EAAAe,IAAAE,EAAAf,EAAAP,MAAA,OAAAsB,GAAA,UAAAkB,EAAAlB,IAAA1B,EAAAyB,KAAAC,EAAA,WAAA/B,EAAAkD,QAAAnB,EAAAoB,SAAAC,MAAA,SAAAnD,GAAA+C,EAAA,OAAA/C,EAAAS,EAAAE,EAAA,aAAAX,GAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAZ,EAAAkD,QAAAnB,GAAAqB,MAAA,SAAAnD,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,EAAA,aAAAf,GAAA,OAAA+C,EAAA,QAAA/C,EAAAS,EAAAE,EAAA,IAAAA,EAAAE,EAAAe,IAAA,KAAA3B,EAAAK,EAAA,gBAAAE,MAAA,SAAAR,EAAAI,GAAA,SAAAgD,IAAA,WAAArD,GAAA,SAAAA,EAAAE,GAAA8C,EAAA/C,EAAAI,EAAAL,EAAAE,EAAA,WAAAA,EAAAA,EAAAA,EAAAkD,KAAAC,EAAAA,GAAAA,GAAA,aAAA3B,EAAA1B,EAAAE,EAAAG,GAAA,IAAAE,EAAAwB,EAAA,gBAAArB,EAAAE,GAAA,GAAAL,IAAA0B,EAAA,MAAAqB,MAAA,mCAAA/C,IAAA2B,EAAA,cAAAxB,EAAA,MAAAE,EAAA,OAAAH,MAAAR,EAAAsD,MAAA,OAAAlD,EAAAmD,OAAA9C,EAAAL,EAAAwB,IAAAjB,IAAA,KAAAE,EAAAT,EAAAoD,SAAA,GAAA3C,EAAA,KAAAE,EAAA0C,EAAA5C,EAAAT,GAAA,GAAAW,EAAA,IAAAA,IAAAmB,EAAA,gBAAAnB,CAAA,cAAAX,EAAAmD,OAAAnD,EAAAsD,KAAAtD,EAAAuD,MAAAvD,EAAAwB,SAAA,aAAAxB,EAAAmD,OAAA,IAAAjD,IAAAwB,EAAA,MAAAxB,EAAA2B,EAAA7B,EAAAwB,IAAAxB,EAAAwD,kBAAAxD,EAAAwB,IAAA,gBAAAxB,EAAAmD,QAAAnD,EAAAyD,OAAA,SAAAzD,EAAAwB,KAAAtB,EAAA0B,EAAA,IAAAK,EAAAX,EAAA3B,EAAAE,EAAAG,GAAA,cAAAiC,EAAAV,KAAA,IAAArB,EAAAF,EAAAkD,KAAArB,EAAAF,EAAAM,EAAAT,MAAAM,EAAA,gBAAA1B,MAAA6B,EAAAT,IAAA0B,KAAAlD,EAAAkD,KAAA,WAAAjB,EAAAV,OAAArB,EAAA2B,EAAA7B,EAAAmD,OAAA,QAAAnD,EAAAwB,IAAAS,EAAAT,IAAA,YAAA6B,EAAA1D,EAAAE,GAAA,IAAAG,EAAAH,EAAAsD,OAAAjD,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAAuD,SAAA,eAAApD,GAAAL,EAAAa,SAAA,SAAAX,EAAAsD,OAAA,SAAAtD,EAAA2B,IAAA5B,EAAAyD,EAAA1D,EAAAE,GAAA,UAAAA,EAAAsD,SAAA,WAAAnD,IAAAH,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA1D,EAAA,aAAA8B,EAAA,IAAAzB,EAAAiB,EAAApB,EAAAP,EAAAa,SAAAX,EAAA2B,KAAA,aAAAnB,EAAAkB,KAAA,OAAA1B,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAAnB,EAAAmB,IAAA3B,EAAAuD,SAAA,KAAAtB,EAAA,IAAAvB,EAAAF,EAAAmB,IAAA,OAAAjB,EAAAA,EAAA2C,MAAArD,EAAAF,EAAAgE,YAAApD,EAAAH,MAAAP,EAAA+D,KAAAjE,EAAAkE,QAAA,WAAAhE,EAAAsD,SAAAtD,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,GAAAC,EAAAuD,SAAA,KAAAtB,GAAAvB,GAAAV,EAAAsD,OAAA,QAAAtD,EAAA2B,IAAA,IAAAkC,UAAA,oCAAA7D,EAAAuD,SAAA,KAAAtB,EAAA,UAAAgC,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,SAAAA,IAAAD,EAAAqE,SAAApE,EAAA,SAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,SAAAuE,WAAAC,KAAAzE,EAAA,UAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAA4B,KAAA,gBAAA5B,EAAA6B,IAAA5B,EAAA0E,WAAA3E,CAAA,UAAAyB,EAAAxB,GAAA,KAAAuE,WAAA,EAAAJ,OAAA,SAAAnE,EAAA4C,QAAAsB,EAAA,WAAAS,OAAA,YAAAlC,EAAA1C,GAAA,GAAAA,GAAA,KAAAA,EAAA,KAAAE,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA4B,KAAA9B,GAAA,sBAAAA,EAAAiE,KAAA,OAAAjE,EAAA,IAAA6E,MAAA7E,EAAA8E,QAAA,KAAAvE,GAAA,EAAAG,EAAA,SAAAuD,IAAA,OAAA1D,EAAAP,EAAA8E,QAAA,GAAAzE,EAAAyB,KAAA9B,EAAAO,GAAA,OAAA0D,EAAAxD,MAAAT,EAAAO,GAAA0D,EAAAV,MAAA,EAAAU,EAAA,OAAAA,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,SAAAvD,EAAAuD,KAAAvD,CAAA,YAAAqD,UAAAd,EAAAjD,GAAA,2BAAAoC,EAAAhC,UAAAiC,EAAA9B,EAAAoC,EAAA,eAAAlC,MAAA4B,EAAAjB,cAAA,IAAAb,EAAA8B,EAAA,eAAA5B,MAAA2B,EAAAhB,cAAA,IAAAgB,EAAA2C,YAAA7D,EAAAmB,EAAArB,EAAA,qBAAAhB,EAAAgF,oBAAA,SAAA/E,GAAA,IAAAD,EAAA,mBAAAC,GAAAA,EAAAgF,YAAA,QAAAjF,IAAAA,IAAAoC,GAAA,uBAAApC,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAoC,IAAApC,EAAAoF,UAAAhD,EAAAnB,EAAAjB,EAAAe,EAAA,sBAAAf,EAAAG,UAAAD,OAAAqB,OAAAmB,GAAA1C,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,OAAAkD,QAAAlD,EAAA,EAAA2C,EAAAG,EAAA3C,WAAAc,EAAA6B,EAAA3C,UAAAU,GAAA,0BAAAd,EAAA+C,cAAAA,EAAA/C,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,QAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAmC,EAAAzB,EAAArB,EAAAC,EAAAG,EAAAE,GAAAG,GAAA,OAAAV,EAAAgF,oBAAA9E,GAAAU,EAAAA,EAAAqD,OAAAb,MAAA,SAAAnD,GAAA,OAAAA,EAAAsD,KAAAtD,EAAAQ,MAAAG,EAAAqD,MAAA,KAAArB,EAAAD,GAAAzB,EAAAyB,EAAA3B,EAAA,aAAAE,EAAAyB,EAAA/B,GAAA,0BAAAM,EAAAyB,EAAA,qDAAA3C,EAAAyF,KAAA,SAAAxF,GAAA,IAAAD,EAAAG,OAAAF,GAAAC,EAAA,WAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,GAAA,OAAAH,EAAAwF,UAAA,SAAAzB,IAAA,KAAA/D,EAAA4E,QAAA,KAAA7E,EAAAC,EAAAyF,MAAA,GAAA1F,KAAAD,EAAA,OAAAiE,EAAAxD,MAAAR,EAAAgE,EAAAV,MAAA,EAAAU,CAAA,QAAAA,EAAAV,MAAA,EAAAU,CAAA,GAAAjE,EAAA0C,OAAAA,EAAAjB,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,QAAA4F,KAAA,OAAA3B,KAAA,OAAAN,KAAA,KAAAC,MAAA3D,EAAA,KAAAsD,MAAA,OAAAE,SAAA,UAAAD,OAAA,YAAA3B,IAAA5B,EAAA,KAAAuE,WAAA3B,QAAA6B,IAAA1E,EAAA,QAAAE,KAAA,WAAAA,EAAA2F,OAAA,IAAAxF,EAAAyB,KAAA,KAAA5B,KAAA2E,OAAA3E,EAAA4F,MAAA,WAAA5F,GAAAD,EAAA,EAAA8F,KAAA,gBAAAxC,MAAA,MAAAtD,EAAA,KAAAuE,WAAA,GAAAG,WAAA,aAAA1E,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,YAAAmE,IAAA,EAAAnC,kBAAA,SAAA7D,GAAA,QAAAuD,KAAA,MAAAvD,EAAA,IAAAE,EAAA,cAAA+F,EAAA5F,EAAAE,GAAA,OAAAK,EAAAgB,KAAA,QAAAhB,EAAAiB,IAAA7B,EAAAE,EAAA+D,KAAA5D,EAAAE,IAAAL,EAAAsD,OAAA,OAAAtD,EAAA2B,IAAA5B,KAAAM,CAAA,SAAAA,EAAA,KAAAiE,WAAAM,OAAA,EAAAvE,GAAA,IAAAA,EAAA,KAAAG,EAAA,KAAA8D,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,YAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,UAAAvF,EAAA0D,QAAA,KAAAwB,KAAA,KAAA9E,EAAAT,EAAAyB,KAAApB,EAAA,YAAAM,EAAAX,EAAAyB,KAAApB,EAAA,iBAAAI,GAAAE,EAAA,SAAA4E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,WAAAuB,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,SAAAxD,GAAA,QAAA8E,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,UAAA,YAAArD,EAAA,MAAAsC,MAAA,kDAAAsC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,WAAA,KAAAR,OAAA,SAAA7D,EAAAD,GAAA,QAAAE,EAAA,KAAAsE,WAAAM,OAAA,EAAA5E,GAAA,IAAAA,EAAA,KAAAK,EAAA,KAAAiE,WAAAtE,GAAA,GAAAK,EAAA6D,QAAA,KAAAwB,MAAAvF,EAAAyB,KAAAvB,EAAA,oBAAAqF,KAAArF,EAAA+D,WAAA,KAAA5D,EAAAH,EAAA,OAAAG,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,aAAA5D,EAAA,UAAAE,EAAAF,EAAAA,EAAAiE,WAAA,UAAA/D,EAAAgB,KAAA3B,EAAAW,EAAAiB,IAAA7B,EAAAU,GAAA,KAAA8C,OAAA,YAAAS,KAAAvD,EAAA4D,WAAAnC,GAAA,KAAA+D,SAAAtF,EAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,aAAAC,EAAA2B,KAAA,MAAA3B,EAAA4B,IAAA,gBAAA5B,EAAA2B,MAAA,aAAA3B,EAAA2B,KAAA,KAAAqC,KAAAhE,EAAA4B,IAAA,WAAA5B,EAAA2B,MAAA,KAAAoE,KAAA,KAAAnE,IAAA5B,EAAA4B,IAAA,KAAA2B,OAAA,cAAAS,KAAA,kBAAAhE,EAAA2B,MAAA5B,IAAA,KAAAiE,KAAAjE,GAAAmC,CAAA,EAAAgE,OAAA,SAAAlG,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,YAAAiG,SAAAhG,EAAAyE,WAAAzE,EAAAqE,UAAAG,EAAAxE,GAAAiC,CAAA,kBAAAlC,GAAA,QAAAD,EAAA,KAAAwE,WAAAM,OAAA,EAAA9E,GAAA,IAAAA,EAAA,KAAAE,EAAA,KAAAsE,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,KAAAI,EAAAH,EAAAyE,WAAA,aAAAtE,EAAAuB,KAAA,KAAArB,EAAAF,EAAAwB,IAAA6C,EAAAxE,EAAA,QAAAK,CAAA,QAAA+C,MAAA,0BAAA8C,cAAA,SAAApG,EAAAE,EAAAG,GAAA,YAAAoD,SAAA,CAAA5C,SAAA6B,EAAA1C,GAAAgE,WAAA9D,EAAAgE,QAAA7D,GAAA,cAAAmD,SAAA,KAAA3B,IAAA5B,GAAAkC,CAAA,GAAAnC,CAAA,UAAAqG,EAAAhG,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,QAAAJ,EAAAL,EAAAO,GAAAE,GAAAE,EAAAN,EAAAD,KAAA,OAAAJ,GAAA,YAAAL,EAAAK,EAAA,CAAAK,EAAA6C,KAAAtD,EAAAe,GAAAwE,QAAAtC,QAAAlC,GAAAoC,KAAAlD,EAAAK,EAAA,UAAA+F,EAAAjG,GAAA,sBAAAJ,EAAA,KAAAD,EAAAuG,UAAA,WAAAf,SAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAAmG,MAAAvG,EAAAD,GAAA,SAAAyG,EAAApG,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAkG,EAAAC,EAAA,OAAArG,EAAA,UAAAqG,EAAArG,GAAAgG,EAAAzF,EAAAV,EAAAK,EAAAkG,EAAAC,EAAA,QAAArG,EAAA,CAAAoG,OAAA,OAEA,IACME,EAAsB,CACxB,mCACA,mCACA,oCAKEC,EAAoB,IAAIC,QA4B9B,SAASC,IAsKT,IAGUC,EAEAC,EAEAC,EArCQC,SAASC,iBAAiB,+BAElCtE,QAAO,eAAAuE,EAAAd,EAAAvG,IAAAoF,MAAC,SAAAkC,EAAOC,GAAI,IAAAC,EAAAC,EAAA,OAAAzH,IAAAuB,MAAA,SAAAmG,GAAA,cAAAA,EAAA7B,KAAA6B,EAAAxD,MAAA,WACjB2C,EAAkBc,IAAIJ,GAAO,CAAFG,EAAAxD,KAAA,eAAAwD,EAAA3D,OAAA,iBAKV,GAHrB8C,EAAkBe,IAAIL,GACtBA,EAAKM,aAAa,eAAgB,QAE5BL,EAAMD,EAAKO,KACP,CAAFJ,EAAAxD,KAAA,eAAAwD,EAAA3D,OAAA,oBAAA2D,EAAA7B,KAAA,GAIAkC,EAAeP,GAAM,CAAFE,EAAAxD,KAAA,SAC6D,OAAhF8D,EAAkBT,EAAM,wDAAwDG,EAAA3D,OAAA,yBAAA2D,EAAAxD,KAAA,GAK7D+D,EAAST,GAAI,QAEP,UAFvBC,EAAQC,EAAA9D,MAEDsE,aACTF,EAAkBT,EAAME,EAASU,SACpCT,EAAAxD,KAAA,iBAAAwD,EAAA7B,KAAA,GAAA6B,EAAAU,GAAAV,EAAA,SAEDW,QAAQC,MAAM,uBAAsBZ,EAAAU,IAAS,yBAAAV,EAAA1B,OAAA,GAAAsB,EAAA,mBAEpD,gBAAAiB,GAAA,OAAAlB,EAAAZ,MAAA,KAAAD,UAAA,EAzBY,IA+BPQ,EAAeG,SAASC,iBAAiB,OAEzCH,EAAiBE,SAASC,iBAAiB,WAE3CF,EAAeC,SAASC,iBAAiB,cAE/B,GAAHoB,OAAAC,EAAOzB,GAAYyB,EAAKxB,GAAcwB,EAAKvB,IAEhDpE,SAAQ,SAAC4F,GACT7B,EAAkBc,IAAIe,KAC1B7B,EAAkBe,IAAIc,GAGlBC,EADiBD,EAAOE,YAAYC,SAEpCb,EAAkBU,EAAQ,sCAElC,GAnLJ,CAAC,SAEcT,EAAQa,GAAA,OAAAC,EAAAtC,MAAC,KAADD,UAAA,UAAAuC,IAmDtB,OAnDsBA,EAAAxC,EAAAvG,IAAAoF,MAAvB,SAAA4D,EAAwBxB,GAAG,IAAAyB,EAAAC,EAAAC,EAAAC,EAAA,OAAApJ,IAAAuB,MAAA,SAAA8H,GAAA,cAAAA,EAAAxD,KAAAwD,EAAAnF,MAAA,OAAAmF,EAAAxD,KAAA,EAGboD,EAAa,EACIC,EAAAlJ,IAAAoF,MAAA,SAAA8D,EAAAE,GAAA,IAAA3B,EAAA,OAAAzH,IAAAuB,MAAA,SAAA+H,GAAA,cAAAA,EAAAzD,KAAAyD,EAAApF,MAAA,cAAAoF,EAAAzD,KAAA,EAAAyD,EAAApF,KAAA,EAIQ,IAAIuB,SAAQ,SAACtC,EAASoG,GACzC,IAAMC,EAAYC,YAAW,WACzBF,EAAO,IAAIhG,MAAM,2BAADiF,OANhB,IAMmD,OACvD,GAPI,KASJkB,OAAOC,QAAQC,YACX,CACI/H,KAAM,WACN2F,IAAKA,EACL4B,QAASA,IAEb,SAAC3B,GACGoC,aAAaL,GACTE,OAAOC,QAAQG,UACfP,EAAOG,OAAOC,QAAQG,WAEtB3G,EAAQsE,EAEhB,GAER,IAAE,OApBY,IAARA,EAAQ6B,EAAA1F,OAsBuB,WAApBV,EAAOuE,GAAqB,CAAA6B,EAAApF,KAAA,cACnC,IAAIX,MAAM,2BAA0B,cAAA+F,EAAAvF,OAAA,UAAArB,EAGvC+E,IAAQ,UAAA6B,EAAAzD,KAAA,EAAAyD,EAAAlB,GAAAkB,EAAA,SAEXF,IAAYH,EAAU,CAAAK,EAAApF,KAAA,eAAAoF,EAAAlB,GAAA,eAAAkB,EAAApF,KAAA,GAIpB,IAAIuB,SAAQ,SAAAtC,GAAO,OAAIsG,WAAWtG,EAAS,IAAK,IAAC,yBAAAmG,EAAAtD,OAAA,GAAAkD,EAAA,iBAlCtDE,EAAU,EAAC,YAAEA,GAAWH,GAAU,CAAAI,EAAAnF,KAAA,gBAAAmF,EAAAhD,cAAA6C,EAAAE,GAAA,oBAAAD,EAAAE,EAAAjB,IAAA,CAAAiB,EAAAnF,KAAA,gBAAAmF,EAAAtF,OAAA,SAAAoF,EAAAzG,GAAA,QAAE0G,IAASC,EAAAnF,KAAA,gBAAAmF,EAAAnF,KAAA,iBAsCL,OAtCKmF,EAAAxD,KAAA,GAAAwD,EAAAU,GAAAV,EAAA,SAsCtDhB,QAAQ2B,KAAK,oBAAqBX,EAAAU,GAAM5B,SAASkB,EAAAtF,OAAA,SAC1C,CACHmE,YAAa,UACbC,QAAS,+BACTG,MAAOe,EAAAU,GAAM5B,UAChB,yBAAAkB,EAAArD,OAAA,GAAAgD,EAAA,oBAERvC,MAAA,KAAAD,UAAA,CAiID,SAASuB,EAAeP,GAapB,IACI,IAAMyC,EAAW,IAAIC,IAAI1C,GAAKyC,SAC9B,MAdqB,CACrB,SACA,cACA,OACA,SACA,QACA,QACA,UACA,SACA,WAKwBE,SAASF,EACrC,CAAE,MAAAG,GACE,OAAO,CACX,CACJ,CAEA,SAASzB,EAAkB0B,GACvB,OAAOzD,EAAoB0D,MAAK,SAAAC,GAAO,OAAIA,EAAQC,KAAKH,EAAM,GAClE,CAEA,SAASrC,EAAkByC,EAAStC,GAEhC,IAAMuC,EAAYvD,SAASwD,cAAc,OACzCD,EAAUE,MAAMC,QAAU,sEAM1BJ,EAAQK,WAAWC,aAAaL,EAAWD,GAC3CC,EAAUM,YAAYP,GAGtB,IAAMQ,EAAU9D,SAASwD,cAAc,QACvCM,EAAQC,UAAY,KACpBD,EAAQL,MAAMC,QAAU,iNAYxBI,EAAQE,MAAQhD,EAGhBsC,EAAQW,iBAAiB,SAAS,SAACnL,GAC/B,QAAIoL,QAAQ,kFAGZpL,EAAEqL,kBACK,EACX,IAEAZ,EAAUM,YAAYC,EAC1B,CAjRIlE,IAGiB,IAAIwE,kBAAiB,SAACC,GACnCA,EAAU1I,SAAQ,SAAC2I,GACXA,EAASC,WAAW3G,QACpBgC,GAER,GACJ,IAGS4E,QAAQxE,SAASyE,KAAM,CAC5BC,WAAW,EACXC,SAAS,IAIbC,YAAYhF,EAlCM","sources":["webpack://nammasuraksha-extension/./emailScanner.js"],"sourcesContent":["// Email scanner content script\r\n\r\n// Configuration\r\nconst SCAN_INTERVAL = 2000; // Scan every 2 seconds for new content\r\nconst SUSPICIOUS_PATTERNS = [\r\n    /^(?!.*@paypal\\.com$).*paypal.*@/i,  // PayPal email spoofing\r\n    /^(?!.*@amazon\\.com$).*amazon.*@/i,   // Amazon email spoofing\r\n    /^(?!.*@google\\.com$).*google.*@/i,   // Google email spoofing\r\n    // Add more patterns\r\n];\r\n\r\n// Track processed elements to avoid re-scanning\r\nconst processedElements = new WeakSet();\r\n\r\n// Start scanning\r\nstartEmailScanning();\r\n\r\nfunction startEmailScanning() {\r\n    // Initial scan\r\n    scanEmailContent();\r\n    \r\n    // Set up mutation observer for dynamic content\r\n    const observer = new MutationObserver((mutations) => {\r\n        mutations.forEach((mutation) => {\r\n            if (mutation.addedNodes.length) {\r\n                scanEmailContent();\r\n            }\r\n        });\r\n    });\r\n\r\n    // Start observing\r\n    observer.observe(document.body, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n\r\n    // Periodic scan for dynamic content\r\n    setInterval(scanEmailContent, SCAN_INTERVAL);\r\n}\r\n\r\nfunction scanEmailContent() {\r\n    // Scan for links\r\n    scanLinks();\r\n    \r\n    // Scan for sender addresses\r\n    scanSenderAddresses();\r\n}\r\n\r\nasync function checkUrl(url) {\r\n    try {\r\n        // Increase timeout and add retry logic\r\n        const maxRetries = 3;\r\n        const timeout = 10000; // 10 seconds\r\n        \r\n        for (let attempt = 1; attempt <= maxRetries; attempt++) {\r\n            try {\r\n                const response = await new Promise((resolve, reject) => {\r\n                    const timeoutId = setTimeout(() => {\r\n                        reject(new Error(`Request timed out after ${timeout}ms`));\r\n                    }, timeout);\r\n\r\n                    chrome.runtime.sendMessage(\r\n                        { \r\n                            type: \"checkUrl\", \r\n                            url: url,\r\n                            attempt: attempt \r\n                        },\r\n                        (response) => {\r\n                            clearTimeout(timeoutId);\r\n                            if (chrome.runtime.lastError) {\r\n                                reject(chrome.runtime.lastError);\r\n                            } else {\r\n                                resolve(response);\r\n                            }\r\n                        }\r\n                    );\r\n                });\r\n\r\n                if (!response || typeof response !== 'object') {\r\n                    throw new Error('Invalid response format');\r\n                }\r\n\r\n                return response;\r\n            } catch (retryError) {\r\n                if (attempt === maxRetries) {\r\n                    throw retryError;\r\n                }\r\n                // Wait before retrying\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n            }\r\n        }\r\n    } catch (error) {\r\n        console.warn('URL check failed:', error.message);\r\n        return { \r\n            threatLevel: 'unknown', \r\n            message: 'Could not verify link safety',\r\n            error: error.message \r\n        };\r\n    }\r\n}\r\n\r\nasync function scanLink(element) {\r\n    if (processedElements.has(element)) return;\r\n    \r\n    processedElements.add(element);\r\n    element.setAttribute('data-scanned', 'true');\r\n    \r\n    const url = element.href;\r\n    if (!url) return;\r\n    \r\n    try {\r\n        if (isShortenedUrl(url)) {\r\n            addWarningOverlay(element, 'Shortened URL detected. Click to verify destination.');\r\n            return;\r\n        }\r\n\r\n        const result = await checkUrl(url);\r\n        if (result.threatLevel !== 'safe') {\r\n            addWarningOverlay(element, result.message);\r\n        }\r\n    } catch (error) {\r\n        console.warn('Error scanning link:', error);\r\n    }\r\n}\r\n\r\nasync function scanPage() {\r\n    const links = document.querySelectorAll('a[href]:not([data-scanned])');\r\n    const senderElements = [\r\n        ...document.querySelectorAll('.gD'),\r\n        ...document.querySelectorAll('.EPt5Dd'),\r\n        ...document.querySelectorAll('.from_name')\r\n    ];\r\n\r\n    // Scan links\r\n    for (const link of links) {\r\n        await scanLink(link);\r\n    }\r\n\r\n    // Check senders\r\n    senderElements.forEach(element => {\r\n        if (!processedElements.has(element)) {\r\n            processedElements.add(element);\r\n            const address = element.textContent.trim();\r\n            if (isSuspiciousEmail(address)) {\r\n                addWarningOverlay(element, 'Potentially spoofed sender address');\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction initializeScanner() {\r\n    try {\r\n        scanPage();\r\n        \r\n        // Set up mutation observer\r\n        const observer = new MutationObserver((mutations) => {\r\n            mutations.forEach((mutation) => {\r\n                if (mutation.addedNodes.length) {\r\n                    scanPage();\r\n                }\r\n            });\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n\r\n        // Periodic scan with proper interval handling\r\n        setInterval(scanPage, 2000);\r\n    } catch (error) {\r\n        console.error('Error initializing scanner:', error);\r\n    }\r\n}\r\n\r\nfunction scanLinks() {\r\n    const links = document.querySelectorAll('a[href]:not([data-scanned])');\r\n    \r\n    links.forEach(async (link) => {\r\n        if (processedElements.has(link)) return;\r\n        \r\n        processedElements.add(link);\r\n        link.setAttribute('data-scanned', 'true');\r\n        \r\n        const url = link.href;\r\n        if (!url) return;\r\n\r\n        try {\r\n            // Check if it's a shortened URL\r\n            if (isShortenedUrl(url)) {\r\n                addWarningOverlay(link, 'Shortened URL detected. Click to verify destination.');\r\n                return;\r\n            }\r\n\r\n            // Send URL to background script for checking\r\n            const response = await checkUrl(url);\r\n\r\n            if (response.threatLevel !== 'safe') {\r\n                addWarningOverlay(link, response.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error scanning link:', error);\r\n        }\r\n    });\r\n}\r\n\r\nfunction scanSenderAddresses() {\r\n    // Different email providers have different DOM structures\r\n    // Gmail\r\n    const gmailSenders = document.querySelectorAll('.gD');\r\n    // Outlook\r\n    const outlookSenders = document.querySelectorAll('.EPt5Dd');\r\n    // Yahoo Mail\r\n    const yahooSenders = document.querySelectorAll('.from_name');\r\n\r\n    const senders = [...gmailSenders, ...outlookSenders, ...yahooSenders];\r\n\r\n    senders.forEach((sender) => {\r\n        if (processedElements.has(sender)) return;\r\n        processedElements.add(sender);\r\n\r\n        const emailAddress = sender.textContent.trim();\r\n        if (isSuspiciousEmail(emailAddress)) {\r\n            addWarningOverlay(sender, 'Potentially spoofed sender address');\r\n        }\r\n    });\r\n}\r\n\r\nfunction isShortenedUrl(url) {\r\n    const shortenerDomains = [\r\n        'bit.ly',\r\n        'tinyurl.com',\r\n        't.co',\r\n        'goo.gl',\r\n        'ow.ly',\r\n        'is.gd',\r\n        'buff.ly',\r\n        'adf.ly',\r\n        'tiny.cc'\r\n    ];\r\n\r\n    try {\r\n        const hostname = new URL(url).hostname;\r\n        return shortenerDomains.includes(hostname);\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction isSuspiciousEmail(email) {\r\n    return SUSPICIOUS_PATTERNS.some(pattern => pattern.test(email));\r\n}\r\n\r\nfunction addWarningOverlay(element, message) {\r\n    // Create warning container\r\n    const container = document.createElement('div');\r\n    container.style.cssText = `\r\n        position: relative;\r\n        display: inline-block;\r\n    `;\r\n\r\n    // Wrap element in container\r\n    element.parentNode.insertBefore(container, element);\r\n    container.appendChild(element);\r\n\r\n    // Add warning icon\r\n    const warning = document.createElement('span');\r\n    warning.innerHTML = '⚠️';\r\n    warning.style.cssText = `\r\n        position: absolute;\r\n        top: -8px;\r\n        right: -8px;\r\n        background: #fff3e0;\r\n        border-radius: 50%;\r\n        padding: 2px;\r\n        cursor: help;\r\n        z-index: 1000;\r\n    `;\r\n\r\n    // Add tooltip\r\n    warning.title = message;\r\n\r\n    // Add click handler to prevent immediate navigation\r\n    element.addEventListener('click', (e) => {\r\n        if (confirm('This link has been flagged as potentially dangerous. Do you want to proceed?')) {\r\n            return true;\r\n        }\r\n        e.preventDefault();\r\n        return false;\r\n    });\r\n\r\n    container.appendChild(warning);\r\n} "],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","SUSPICIOUS_PATTERNS","processedElements","WeakSet","scanEmailContent","gmailSenders","outlookSenders","yahooSenders","document","querySelectorAll","_ref","_callee","link","url","response","_context","has","add","setAttribute","href","isShortenedUrl","addWarningOverlay","checkUrl","threatLevel","message","t0","console","error","_x3","concat","_toConsumableArray","sender","isSuspiciousEmail","textContent","trim","_x","_checkUrl","_callee2","maxRetries","_loop","_ret","attempt","_context3","_context2","reject","timeoutId","setTimeout","chrome","runtime","sendMessage","clearTimeout","lastError","t1","warn","hostname","URL","includes","_unused","email","some","pattern","test","element","container","createElement","style","cssText","parentNode","insertBefore","appendChild","warning","innerHTML","title","addEventListener","confirm","preventDefault","MutationObserver","mutations","mutation","addedNodes","observe","body","childList","subtree","setInterval"],"sourceRoot":""}