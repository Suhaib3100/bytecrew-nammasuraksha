{"version":3,"file":"background.js","mappings":"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","sources":["webpack://nammasuraksha-extension/./config.js","webpack://nammasuraksha-extension/./services/api.js","webpack://nammasuraksha-extension/./background.js"],"sourcesContent":["const config = {\r\n    API_BASE_URL: 'http://localhost:3001/api',\r\n    ENDPOINTS: {\r\n        ANALYZE_MESSAGE: '/analyze/message',\r\n        ANALYZE_HISTORY: '/analyze/history',\r\n        GET_ANALYSIS: '/analyze'\r\n    }\r\n};\r\n\r\nexport default config; ","import config from '../config';\r\n\r\nclass ApiService {\r\n    static async analyzeContent(content, type) {\r\n        try {\r\n            const response = await fetch(`${config.API_BASE_URL}${config.ENDPOINTS.ANALYZE_MESSAGE}`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    content,\r\n                    type\r\n                })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data.analysis;\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getAnalysisHistory(limit = 10, offset = 0) {\r\n        try {\r\n            const response = await fetch(\r\n                `${config.API_BASE_URL}${config.ENDPOINTS.ANALYZE_HISTORY}?limit=${limit}&offset=${offset}`\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static async getAnalysis(id) {\r\n        try {\r\n            const response = await fetch(`${config.API_BASE_URL}${config.ENDPOINTS.GET_ANALYSIS}/${id}`);\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`HTTP error! status: ${response.status}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ApiService; ","import ApiService from './services/api';\r\n\r\n// Constants for API endpoints\r\nconst API_ENDPOINT = 'http://localhost:3001/api';\r\n\r\n// Cache for analysis results\r\nconst analysisCache = new Map();\r\nconst CACHE_DURATION = 5 * 60 * 1000; // 5 minutes\r\n\r\n// Initialize extension\r\nchrome.runtime.onInstalled.addListener(() => {\r\n    chrome.storage.local.set({\r\n        threatsBlocked: 0,\r\n        linksScanned: 0\r\n    });\r\n});\r\n\r\n// Function to check if URL is allowed for analysis\r\nfunction isAllowedUrl(url) {\r\n    try {\r\n        const urlObj = new URL(url);\r\n        return !urlObj.protocol.startsWith('chrome') && \r\n               !urlObj.protocol.startsWith('chrome-extension') &&\r\n               !urlObj.protocol.startsWith('about');\r\n    } catch {\r\n        return false;\r\n    }\r\n}\r\n\r\n// Function to analyze email content\r\nasync function analyzeEmailContent(content) {\r\n    try {\r\n        const response = await fetch(`${API_ENDPOINT}/analyze/message`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ content })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return {\r\n            type: 'EMAIL_ANALYSIS',\r\n            threatLevel: data.threatLevel || 'unknown',\r\n            message: data.message || 'Email analysis completed',\r\n            details: {\r\n                scamProbability: data.scamProbability || 0,\r\n                suspiciousLinks: data.suspiciousLinks || [],\r\n                warnings: data.warnings || []\r\n            }\r\n        };\r\n    } catch (error) {\r\n        console.error('Error analyzing email:', error);\r\n        return {\r\n            type: 'EMAIL_ANALYSIS',\r\n            threatLevel: 'unknown',\r\n            message: 'Could not analyze email content',\r\n            details: {\r\n                error: error.message\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\n// Function to analyze webpage content\r\nasync function analyzeWebpage(url, content) {\r\n    try {\r\n        const response = await fetch(`${API_ENDPOINT}/analyze/webpage`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ url, content })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        return {\r\n            type: 'WEBPAGE_ANALYSIS',\r\n            threatLevel: data.threatLevel || 'unknown',\r\n            message: data.message || 'Website analysis completed',\r\n            details: {\r\n                securityScore: data.securityScore || 0,\r\n                threats: data.threats || [],\r\n                recommendations: data.recommendations || []\r\n            }\r\n        };\r\n    } catch (error) {\r\n        console.error('Error analyzing webpage:', error);\r\n        return {\r\n            type: 'WEBPAGE_ANALYSIS',\r\n            threatLevel: 'unknown',\r\n            message: 'Could not analyze webpage content',\r\n            details: {\r\n                error: error.message\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\n// Function to extract email content\r\nasync function extractEmailContent(tabId) {\r\n    try {\r\n        const result = await chrome.scripting.executeScript({\r\n            target: { tabId },\r\n            func: () => {\r\n                // Email content selectors for different email services\r\n                const selectors = {\r\n                    gmail: ['.a3s.aiL', '.ii.gt'],\r\n                    outlook: ['[role=\"main\"]', '.ReadMsgBody'],\r\n                    yahoo: ['[data-test-id=\"message-view\"]', '#msg-body']\r\n                };\r\n\r\n                // Try each selector\r\n                for (const service in selectors) {\r\n                    for (const selector of selectors[service]) {\r\n                        const element = document.querySelector(selector);\r\n                        if (element) {\r\n                            return {\r\n                                content: element.innerText,\r\n                                service: service\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n                return null;\r\n            }\r\n        });\r\n\r\n        return result[0]?.result;\r\n    } catch (error) {\r\n        console.error('Error extracting email content:', error);\r\n        return null;\r\n    }\r\n}\r\n\r\n// Function to update badge\r\nfunction updateBadge(analysis, tabId) {\r\n    const colors = {\r\n        safe: '#4CAF50',    // Green\r\n        warning: '#FFC107', // Yellow\r\n        danger: '#F44336',  // Red\r\n        unknown: '#9E9E9E'  // Grey\r\n    };\r\n\r\n    const threatLevels = {\r\n        low: 'safe',\r\n        medium: 'warning',\r\n        high: 'danger',\r\n        unknown: 'unknown'\r\n    };\r\n\r\n    const level = threatLevels[analysis.threatLevel] || 'unknown';\r\n    const color = colors[level];\r\n    const text = level.charAt(0).toUpperCase();\r\n\r\n    chrome.action.setBadgeText({ text, tabId });\r\n    chrome.action.setBadgeBackgroundColor({ color, tabId });\r\n\r\n    // Send analysis results to popup\r\n    chrome.runtime.sendMessage({\r\n        type: analysis.type,\r\n        data: analysis\r\n    });\r\n}\r\n\r\n// Listen for messages from popup and content scripts\r\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\r\n    if (message.type === 'GET_ANALYSIS') {\r\n        handleGetAnalysis(message.tabId);\r\n    } else if (message.type === 'REFRESH_ANALYSIS') {\r\n        handleRefreshAnalysis(message.tabId);\r\n    }\r\n    return true;\r\n});\r\n\r\n// Handle getting analysis\r\nasync function handleGetAnalysis(tabId) {\r\n    try {\r\n        const analysis = analysisCache.get(tabId);\r\n        if (analysis) {\r\n            sendAnalysisToPopup(analysis);\r\n        } else {\r\n            await performAnalysis(tabId);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error getting analysis:', error);\r\n        sendErrorToPopup('Failed to get analysis');\r\n    }\r\n}\r\n\r\n// Handle refreshing analysis\r\nasync function handleRefreshAnalysis(tabId) {\r\n    try {\r\n        await performAnalysis(tabId);\r\n    } catch (error) {\r\n        console.error('Error refreshing analysis:', error);\r\n        sendErrorToPopup('Failed to refresh analysis');\r\n    }\r\n}\r\n\r\n// Handle tab updates\r\nasync function handleTabUpdate(tabId, tab) {\r\n    try {\r\n        if (tab.url && !tab.url.startsWith('chrome://')) {\r\n            await performAnalysis(tabId);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error handling tab update:', error);\r\n    }\r\n}\r\n\r\n// Perform content analysis\r\nasync function performAnalysis(tabId) {\r\n    try {\r\n        const tab = await chrome.tabs.get(tabId);\r\n        \r\n        // Determine content type and get content\r\n        const isEmail = tab.url.includes('mail.google.com') || \r\n                       tab.url.includes('outlook.com') ||\r\n                       tab.url.includes('yahoo.mail');\r\n        \r\n        let content;\r\n        if (isEmail) {\r\n            content = await getEmailContent(tabId);\r\n        } else {\r\n            content = await getPageContent(tabId);\r\n        }\r\n\r\n        // Get analysis from backend\r\n        const analysis = await ApiService.analyzeContent(content, isEmail ? 'EMAIL' : 'WEBPAGE');\r\n        \r\n        // Cache and send results\r\n        analysisCache.set(tabId, analysis);\r\n        sendAnalysisToPopup(analysis);\r\n\r\n        // Update stats\r\n        updateStats(analysis);\r\n\r\n    } catch (error) {\r\n        console.error('Error performing analysis:', error);\r\n        sendErrorToPopup('Failed to analyze content');\r\n    }\r\n}\r\n\r\n// Get email content\r\nasync function getEmailContent(tabId) {\r\n    return new Promise((resolve, reject) => {\r\n        chrome.tabs.sendMessage(tabId, { type: 'GET_EMAIL_CONTENT' }, response => {\r\n            if (chrome.runtime.lastError) {\r\n                reject(chrome.runtime.lastError);\r\n            } else {\r\n                resolve(response.content);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// Get page content\r\nasync function getPageContent(tabId) {\r\n    return new Promise((resolve, reject) => {\r\n        chrome.tabs.sendMessage(tabId, { type: 'GET_PAGE_CONTENT' }, response => {\r\n            if (chrome.runtime.lastError) {\r\n                reject(chrome.runtime.lastError);\r\n            } else {\r\n                resolve(response.content);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n// Send analysis results to popup\r\nfunction sendAnalysisToPopup(analysis) {\r\n    chrome.runtime.sendMessage({\r\n        type: analysis.type === 'EMAIL' ? 'EMAIL_ANALYSIS' : 'WEBPAGE_ANALYSIS',\r\n        data: analysis\r\n    });\r\n}\r\n\r\n// Send error to popup\r\nfunction sendErrorToPopup(message) {\r\n    chrome.runtime.sendMessage({\r\n        type: 'ERROR',\r\n        data: {\r\n            threatLevel: 'error',\r\n            message: message\r\n        }\r\n    });\r\n}\r\n\r\n// Update stats\r\nasync function updateStats(analysis) {\r\n    const stats = await chrome.storage.local.get(['threatsBlocked', 'linksScanned']);\r\n    \r\n    const newStats = {\r\n        threatsBlocked: (stats.threatsBlocked || 0) + (analysis.details?.threats?.length || 0),\r\n        linksScanned: (stats.linksScanned || 0) + (analysis.details?.suspiciousLinks?.length || 0)\r\n    };\r\n    \r\n    await chrome.storage.local.set(newStats);\r\n}\r\n\r\n// Listen for tab updates\r\nchrome.tabs.onUpdated.addListener(async (tabId, changeInfo, tab) => {\r\n    if (changeInfo.status === 'complete' && tab.url && isAllowedUrl(tab.url)) {\r\n        try {\r\n            // Check cache first\r\n            const cached = analysisCache.get(tab.url);\r\n            if (cached && (Date.now() - cached.timestamp) < CACHE_DURATION) {\r\n                updateBadge(cached.result, tabId);\r\n                return;\r\n            }\r\n\r\n            // Check if it's an email page\r\n            if (tab.url.includes('mail.google.com') || \r\n                tab.url.includes('outlook') || \r\n                tab.url.includes('mail.yahoo.com')) {\r\n                \r\n                // Show analyzing status\r\n                updateBadge({ threatLevel: 'unknown', message: 'Analyzing email...' }, tabId);\r\n                \r\n                const emailData = await extractEmailContent(tabId);\r\n                if (emailData) {\r\n                    const analysis = await analyzeEmailContent(emailData.content);\r\n                    analysisCache.set(tab.url, {\r\n                        result: analysis,\r\n                        timestamp: Date.now()\r\n                    });\r\n                    updateBadge(analysis, tabId);\r\n                }\r\n            } else {\r\n                // Show analyzing status for webpage\r\n                updateBadge({ threatLevel: 'unknown', message: 'Analyzing webpage...' }, tabId);\r\n\r\n                // Get page content\r\n                const content = await chrome.scripting.executeScript({\r\n                    target: { tabId },\r\n                    func: () => document.documentElement.outerHTML\r\n                });\r\n\r\n                if (content[0]?.result) {\r\n                    const analysis = await analyzeWebpage(tab.url, content[0].result);\r\n                    analysisCache.set(tab.url, {\r\n                        result: analysis,\r\n                        timestamp: Date.now()\r\n                    });\r\n                    updateBadge(analysis, tabId);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error in tab update handler:', error);\r\n            updateBadge({\r\n                type: 'ERROR',\r\n                threatLevel: 'unknown',\r\n                message: 'Analysis failed: ' + error.message\r\n            }, tabId);\r\n        }\r\n    }\r\n}); "],"names":["API_BASE_URL","ENDPOINTS","ANALYZE_MESSAGE","ANALYZE_HISTORY","GET_ANALYSIS","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","toPrimitive","String","Number","_toPrimitive","ApiService","_classCallCheck","_analyzeContent","_callee","content","response","data","_context","fetch","concat","config","headers","body","JSON","stringify","ok","status","json","analysis","t0","console","error","_x","_x2","_getAnalysisHistory","_callee2","limit","offset","_args2","_context2","undefined","_getAnalysis","_callee3","id","_context3","_x3","API_ENDPOINT","analysisCache","Map","isAllowedUrl","url","urlObj","URL","protocol","startsWith","_unused","analyzeEmailContent","_analyzeEmailContent","threatLevel","message","details","scamProbability","suspiciousLinks","warnings","analyzeWebpage","_analyzeWebpage","securityScore","threats","recommendations","extractEmailContent","_x4","_extractEmailContent","_callee4","tabId","_result$","result","_context4","chrome","scripting","executeScript","target","func","selectors","gmail","outlook","yahoo","service","_step","_iterator","_createForOfIteratorHelper","selector","element","document","querySelector","innerText","err","updateBadge","level","low","medium","high","unknown","color","safe","warning","danger","text","toUpperCase","action","setBadgeText","setBadgeBackgroundColor","runtime","sendMessage","_handleGetAnalysis","_callee5","_context5","get","sendAnalysisToPopup","performAnalysis","sendErrorToPopup","_handleRefreshAnalysis","_callee6","_context6","_x9","_performAnalysis","_callee8","tab","isEmail","_context8","tabs","includes","getEmailContent","getPageContent","analyzeContent","set","updateStats","_x10","_getEmailContent","_callee9","_context9","reject","lastError","_x11","_getPageContent","_callee10","_context10","_x12","_updateStats","_callee11","_analysis$details","_analysis$details2","stats","newStats","_context11","storage","local","threatsBlocked","linksScanned","onInstalled","addListener","onMessage","sender","sendResponse","_x5","handleGetAnalysis","_x6","handleRefreshAnalysis","onUpdated","_ref","changeInfo","cached","emailData","_content$","_analysis","Date","now","timestamp","documentElement","outerHTML","_x13","_x14","_x15"],"sourceRoot":""}